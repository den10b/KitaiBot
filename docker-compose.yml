version: '3.3'

services:

  db:
    container_name: database
    hostname: db
    image: postgres:10.5

    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
    restart: always
    networks:
      - tg_bot
    env_file:
      - ".env"
    volumes:
      - ./postgres:/var/lib/postgresql

  django:
    container_name: django
    build: 
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    volumes:
      - .:/usr/src/app/${BOT_NAME:-tg_bot}
    command: python manage.py runserver 0.0.0.0:80
    ports:
      - '80:80'
    depends_on:
      - db
    env_file:
      - '.env'
    networks:
      - tg_bot

  bot:
    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    volumes:
    - .:/usr/src/app/${BOT_NAME:-tg_bot}
    command: python app.py
    restart: always
    depends_on:
      - db
    env_file:
      - ".env"
    networks:
    - tg_bot


networks:
  tg_bot:
    driver: bridge
